.flip-card {
    background-color: transparent;
    width: 300px;
    height: 300px;
    perspective: 1000px;
}

.flip-card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    transition: transform 0.6s;
    transform-style: preserve-3d;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
}

.flip-card:hover .flip-card-inner {
    transform: rotateY(180deg);
}

.flip-card-front,
.flip-card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
}

.flip-card-front {
    background-color: #bbb;
    color: black;
}

.flip-card-back {
    background-color: #2980b9;
    color: white;
    transform: rotateY(180deg);
}

.flip-card-front img {
    max-width: 300px;
    max-height: 300px;
    object-fit: cover;
    aspect-ratio: 1/1;
}

.flip-card-back-inner {
    display: flex;
    flex-direction: column;
}

.card-github {
    flex-grow: 1;
}

.modal {
    width: auto;
    max-width: 800px;
    text-wrap: wrap;
    background-color: var(--third-color);
    border: none;
}

.modal img {
    width: auto;
    max-width: 800px;
    height: auto;
    object-fit: contain;
}

.modal-tools {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-evenly;
    text-wrap: wrap;
}

.modal-tools-title { 
    margin: 0;
    padding: 0;
    text-align: center;
}

.modal-links {
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
}


/* Open state of the dialog  */
dialog:open {
    opacity: 1;
    transform: scaleY(1);
  }
  
  /* Closed state of the dialog   */
  dialog {
    opacity: 0;
    transform: scaleY(0);
    transition:
      opacity 0.7s ease-out,
      transform 0.7s ease-out,
      overlay 0.7s ease-out allow-discrete,
      display 0.7s ease-out allow-discrete;
    /* Equivalent to
    transition: all 0.7s allow-discrete; */
  }
  
  /* Before open state  */
  /* Needs to be after the previous dialog:open rule to take effect,
      as the specificity is the same */
  @starting-style {
    dialog:open {
      opacity: 0;
      transform: scaleY(0);
    }
  }
  
  /* Transition the :backdrop when the dialog modal is promoted to the top layer */
  dialog::backdrop {
    background-color: rgb(0 0 0 / 0%);
    transition:
      display 0.7s allow-discrete,
      overlay 0.7s allow-discrete,
      background-color 0.7s;
    /* Equivalent to
    transition: all 0.7s allow-discrete; */
  }
  
  dialog:open::backdrop {
    background-color: rgb(0 0 0 / 45%);
  }
  
  /* This starting-style rule cannot be nested inside the above selector
  because the nesting selector cannot represent pseudo-elements. */
  
  @starting-style {
    dialog:open::backdrop {
      background-color: rgb(0 0 0 / 0%);
    }
  }